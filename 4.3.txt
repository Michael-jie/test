1. 安卓打包生成APK文件
    1. 选择Build -> Generate Signed Bundle / APK…，弹出生成安装包的对话框
    2. 选择APK，弹出APK签名对话框，填写完签名，导出地址后点击next，弹出导出APK的打包对话框
        1. 填写过密钥会自动填充
        2. 没有填写过密钥点击create new…去创建
    3. 选择release或者debug选项，点击Finish，等待生成APK文件
    4. APK文件安装失败原因：
        1. App只能升级不能降级，版本号小于已安装的版本号则会造成安装失败。
        2. 新旧的签名不一致会造成安装失败
        3. 安装类型不匹配则会安装失败【 比如之前安装的debug，现在安装release】
2. 使用Android Studio自带的工具制作App所有尺寸图标
    1. 右键模块 -> New -> Image Asset， 弹出选择新图片后的图标制作对话框
    2. 在Path一栏中点击选择新图片，点击next，进入新图片生成图标预览页面
    3. 点击Finish，则会生成对应尺寸图标
3. 给APK瘦身
    1. 去除冗余功能
        1. Application节点中，将allowBackup属性设置为false： 该字段设置为true则表示允许用户备份APK安装包和应用程序，以便在刷机或者数据丢失后恢复应用，会造成用户隐私、账号密码、聊天记录泄露等风险
        2. Application节点中，将supportsRtl属性设置为false：该字段设置为true，则表示支持从右向左书写的文字系统，常用的中文和英文都是从左往右的书写方式，几乎用不到此功能
    2. 精简无用资源
        1. 在build.gradle中，将buildTypes中的release的isMinifyEnabled设置为true：Android Studio打包APK时会压缩代码以及混淆代码
        2. 在build.gradle中，在buildTypes中的release新增字段shrinkReasources设置为true：Android Studio打包SDK时会移除无用的资源文件
    3. 压缩图片：保持有损压缩在60%的图片质量
4. 实现：Debug模式下输出日志信息和Toast信息，Release模式下屏蔽日志信息和部分Toast信息
    1. 生成BuildConfig文件 ```````````
    2. 当打的APK包为Debug版本，那么BuildConfig中的DEBUG值为true，当打的包为Release版本那么BuildConfig中的DEBUG值为false
    3. 自定义Log工具类,使用BuildConfig的DEBUG的值区分是否输出日志信息和Toast信息
5. 对APK文件解包，主要用来解析res资源和AndroidManifest.xml
    1. 进入https://apktool.org/docs/install/
    2. 下载脚本，改名为apktool【注意不能有扩展名】
    3. 下载最新版本的Apktool, 并将文件改名为apktool.jar
    4. 将apktool和apktool.jar都移至/usr/local/bin文件夹中
    5. 需要执行的命令行操作：
        1. sudo chmod +x apktool
        2. sudo chmod +x apktool.jar
        3. sudo apktool
    6. 对APK文件解包命令： apk d app-release.apk
6. 新mac电脑配置环境
    1. 下载Xcode 14.3.1
    2. 下载Android Studio Giraffe
    3. 遇到的问题：
        1. AS编译报错 Cause: error=86, Bad CPU type in executable
        2. 解决方案：升级rosetta库【sudo softwareupdate —install-rosetta】然后重新编译


